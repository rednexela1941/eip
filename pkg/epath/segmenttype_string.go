// Code generated by "stringer -type=SegmentType"; DO NOT EDIT.

package epath

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SegmentTypePort-0]
	_ = x[SegmentTypeLogical-32]
	_ = x[SegmentTypeNetwork-64]
	_ = x[SegmentTypeSymbolic-96]
	_ = x[SegmentTypeData-128]
	_ = x[SegmentTypeDataTypeConstructed-160]
	_ = x[SegmentTypeDataTypeElementary-192]
	_ = x[SegmentTypeReserved-224]
	_ = x[SegmentTypeMask-224]
}

const (
	_SegmentType_name_0 = "SegmentTypePort"
	_SegmentType_name_1 = "SegmentTypeLogical"
	_SegmentType_name_2 = "SegmentTypeNetwork"
	_SegmentType_name_3 = "SegmentTypeSymbolic"
	_SegmentType_name_4 = "SegmentTypeData"
	_SegmentType_name_5 = "SegmentTypeDataTypeConstructed"
	_SegmentType_name_6 = "SegmentTypeDataTypeElementary"
	_SegmentType_name_7 = "SegmentTypeReserved"
)

func (i SegmentType) String() string {
	switch {
	case i == 0:
		return _SegmentType_name_0
	case i == 32:
		return _SegmentType_name_1
	case i == 64:
		return _SegmentType_name_2
	case i == 96:
		return _SegmentType_name_3
	case i == 128:
		return _SegmentType_name_4
	case i == 160:
		return _SegmentType_name_5
	case i == 192:
		return _SegmentType_name_6
	case i == 224:
		return _SegmentType_name_7
	default:
		return "SegmentType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
