// Code generated by "stringer -type=ErrorCode"; DO NOT EDIT.

package encap

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StatusSuccess-0]
	_ = x[StatusInvalidCommand-1]
	_ = x[StatusInsufficientMemory-2]
	_ = x[StatusInvalidSessionHandle-100]
	_ = x[StatusInvalidLength-101]
	_ = x[StatusUnsupportedProtocolVersion-105]
	_ = x[StatusEncapsulatedCIPServiceNotAllowedOnThisPort-106]
}

const (
	_ErrorCode_name_0 = "StatusSuccessStatusInvalidCommandStatusInsufficientMemory"
	_ErrorCode_name_1 = "StatusInvalidSessionHandleStatusInvalidLength"
	_ErrorCode_name_2 = "StatusUnsupportedProtocolVersionStatusEncapsulatedCIPServiceNotAllowedOnThisPort"
)

var (
	_ErrorCode_index_0 = [...]uint8{0, 13, 33, 57}
	_ErrorCode_index_1 = [...]uint8{0, 26, 45}
	_ErrorCode_index_2 = [...]uint8{0, 32, 80}
)

func (i ErrorCode) String() string {
	switch {
	case i <= 2:
		return _ErrorCode_name_0[_ErrorCode_index_0[i]:_ErrorCode_index_0[i+1]]
	case 100 <= i && i <= 101:
		i -= 100
		return _ErrorCode_name_1[_ErrorCode_index_1[i]:_ErrorCode_index_1[i+1]]
	case 105 <= i && i <= 106:
		i -= 105
		return _ErrorCode_name_2[_ErrorCode_index_2[i]:_ErrorCode_index_2[i+1]]
	default:
		return "ErrorCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
