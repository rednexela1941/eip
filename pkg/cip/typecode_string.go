// Code generated by "stringer -type=TypeCode"; DO NOT EDIT.

package cip

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UTIMECode-192]
	_ = x[BOOLCode-193]
	_ = x[SINTCode-194]
	_ = x[INTCode-195]
	_ = x[DINTCode-196]
	_ = x[LINTCode-197]
	_ = x[USINTCode-198]
	_ = x[UINTCode-199]
	_ = x[UDINTCode-200]
	_ = x[ULINTCode-201]
	_ = x[REALCode-202]
	_ = x[LREALCode-203]
	_ = x[BYTECode-209]
	_ = x[WORDCode-210]
	_ = x[DWORDCode-211]
	_ = x[LWORDCode-212]
}

const (
	_TypeCode_name_0 = "UTIMECodeBOOLCodeSINTCodeINTCodeDINTCodeLINTCodeUSINTCodeUINTCodeUDINTCodeULINTCodeREALCodeLREALCode"
	_TypeCode_name_1 = "BYTECodeWORDCodeDWORDCodeLWORDCode"
)

var (
	_TypeCode_index_0 = [...]uint8{0, 9, 17, 25, 32, 40, 48, 57, 65, 74, 83, 91, 100}
	_TypeCode_index_1 = [...]uint8{0, 8, 16, 25, 34}
)

func (i TypeCode) String() string {
	switch {
	case 192 <= i && i <= 203:
		i -= 192
		return _TypeCode_name_0[_TypeCode_index_0[i]:_TypeCode_index_0[i+1]]
	case 209 <= i && i <= 212:
		i -= 209
		return _TypeCode_name_1[_TypeCode_index_1[i]:_TypeCode_index_1[i+1]]
	default:
		return "TypeCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
